{"ast":null,"code":"var _jsxFileName = \"D:\\\\Auction\\\\client\\\\src\\\\bidder\\\\CountdownTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = ({\n  startTime,\n  endTime\n}) => {\n  _s();\n  const calculateTimeRemaining = () => {\n    if (!startTime || !endTime) {\n      console.error('Invalid startTime or endTime');\n      return {\n        hours: '00',\n        minutes: '00',\n        seconds: '00'\n      };\n    }\n    const currentDate = new Date();\n    const startDateString = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()} ${startTime}`;\n    const endDateString = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()} ${endTime}`;\n    const startDate = new Date(startDateString);\n    const endDate = new Date(endDateString);\n    console.log('Now:', currentDate);\n    console.log('StartDate:', startDate);\n    console.log('EndDate:', endDate);\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n      console.error('Invalid startDate or endDate format');\n      return {\n        hours: '00',\n        minutes: '00',\n        seconds: '00'\n      };\n    }\n    if (currentDate < startDate) {\n      const remainingTime = startDate - currentDate;\n      const seconds = Math.floor(remainingTime / 1000 % 60);\n      const minutes = Math.floor(remainingTime / 1000 / 60 % 60);\n      const hours = Math.floor(remainingTime / (1000 * 60 * 60) % 24);\n      const formattedHours = hours.toString().padStart(2, '0');\n      const formattedMinutes = minutes.toString().padStart(2, '0');\n      const formattedSeconds = seconds.toString().padStart(2, '0');\n      return {\n        hours: formattedHours,\n        minutes: formattedMinutes,\n        seconds: formattedSeconds\n      };\n    }\n    let remainingTime = endDate - currentDate;\n    if (remainingTime <= 0) {\n      return {\n        hours: '00',\n        minutes: '00',\n        seconds: '00'\n      };\n    }\n    const seconds = Math.floor(remainingTime / 1000 % 60);\n    const minutes = Math.floor(remainingTime / 1000 / 60 % 60);\n    const hours = Math.floor(remainingTime / (1000 * 60 * 60) % 24);\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    return {\n      hours: formattedHours,\n      minutes: formattedMinutes,\n      seconds: formattedSeconds\n    };\n  };\n  const [timeRemaining, setTimeRemaining] = useState(calculateTimeRemaining());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeRemaining(calculateTimeRemaining());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [startTime, endTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          fontSize: '20px',\n          color: '#cc0000'\n        },\n        children: \"Time Remaining:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        style: {\n          fontSize: '20px',\n          color: 'red'\n        },\n        children: [\" \", timeRemaining.hours, \":\", timeRemaining.minutes, \":\", timeRemaining.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"J5rJaFRpR/mejDk/J051Ee02K5E=\");\n_c = CountdownTimer;\nCountdownTimer.propTypes = {\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string.isRequired\n};\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","CountdownTimer","startTime","endTime","_s","calculateTimeRemaining","console","error","hours","minutes","seconds","currentDate","Date","startDateString","getMonth","getDate","getFullYear","endDateString","startDate","endDate","log","isNaN","getTime","remainingTime","Math","floor","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","timeRemaining","setTimeRemaining","timer","setInterval","clearInterval","children","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["D:/Auction/client/src/bidder/CountdownTimer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CountdownTimer = ({ startTime, endTime }) => {\r\n  const calculateTimeRemaining = () => {\r\n    if (!startTime || !endTime) {\r\n      console.error('Invalid startTime or endTime');\r\n      return { hours: '00', minutes: '00', seconds: '00' };\r\n    }\r\n\r\n    const currentDate = new Date(); \r\n\r\n    const startDateString = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()} ${startTime}`;\r\n    const endDateString = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()} ${endTime}`;\r\n\r\n    const startDate = new Date(startDateString);\r\n    const endDate = new Date(endDateString);\r\n\r\n    console.log('Now:', currentDate);\r\n    console.log('StartDate:', startDate);\r\n    console.log('EndDate:', endDate);\r\n\r\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\r\n      console.error('Invalid startDate or endDate format');\r\n      return { hours: '00', minutes: '00', seconds: '00' };\r\n    }\r\n\r\n    if (currentDate < startDate) {\r\n      const remainingTime = startDate - currentDate;\r\n\r\n      const seconds = Math.floor((remainingTime / 1000) % 60);\r\n      const minutes = Math.floor((remainingTime / 1000 / 60) % 60);\r\n      const hours = Math.floor((remainingTime / (1000 * 60 * 60)) % 24);\r\n\r\n      const formattedHours = hours.toString().padStart(2, '0');\r\n      const formattedMinutes = minutes.toString().padStart(2, '0');\r\n      const formattedSeconds = seconds.toString().padStart(2, '0');\r\n\r\n      return { hours: formattedHours, minutes: formattedMinutes, seconds: formattedSeconds };\r\n    }\r\n\r\n    let remainingTime = endDate - currentDate;\r\n\r\n    if (remainingTime <= 0) {\r\n      return { hours: '00', minutes: '00', seconds: '00' };\r\n    }\r\n\r\n    const seconds = Math.floor((remainingTime / 1000) % 60);\r\n    const minutes = Math.floor((remainingTime / 1000 / 60) % 60);\r\n    const hours = Math.floor((remainingTime / (1000 * 60 * 60)) % 24);\r\n\r\n    const formattedHours = hours.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n\r\n    return { hours: formattedHours, minutes: formattedMinutes, seconds: formattedSeconds };\r\n  };\r\n\r\n  const [timeRemaining, setTimeRemaining] = useState(calculateTimeRemaining());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeRemaining(calculateTimeRemaining());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [startTime,endTime]);\r\n\r\n  return (\r\n    <div>\r\n      <p >\r\n        <b style={{fontSize:'20px',color:'#cc0000'}}>Time Remaining:</b><em style={{fontSize:'20px',color:'red'}}> {timeRemaining.hours}:{timeRemaining.minutes}:{timeRemaining.seconds}</em>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nCountdownTimer.propTypes = {\r\n  startTime: PropTypes.string.isRequired,\r\n  endTime: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}