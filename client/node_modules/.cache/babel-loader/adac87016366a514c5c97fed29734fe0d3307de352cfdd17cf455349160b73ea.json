{"ast":null,"code":"var _jsxFileName = \"D:\\\\Auction\\\\client\\\\src\\\\bidder\\\\Payment.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useLocation} from 'react-router-dom';\n// import \"./payment.css\";\n\n// const Payment = () => {\n//   const [paymentData, setPaymentData] = useState(null);\n//   const location = useLocation()\n//   console.log(location.state);\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:4000/viewproductbyid`, {\n//         method: 'post',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ id: location.state.id }),\n//       });\n\n//       const result = await response.json();\n//       setPaymentData(result);\n//       console.log(result);\n//     } catch (error) {\n//       console.error('Error fetching product data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [location.state.id]);\n\n//   const initPayment = () => {\n//     if (!paymentData) {\n//       console.error('Payment data not available');\n//       return;\n//     }\n\n//     const options = {\n//       key: \"rzp_test_LTI32T86DqAN8X\", \n//       amount: paymentData.BidAmount,\n//       currency: paymentData.currency,\n//       name: paymentData.name,\n//       description: paymentData.description,\n//       image: paymentData.image,\n//       order_id: paymentData.order_id,\n//       handler: async (response) => {\n//         try {\n//           const verifyUrl = \"http://localhost:8080/api/payment/verify\";\n//           const { data } = await axios.post(verifyUrl, response);\n//           console.log(data);\n//         } catch (error) {\n//           console.log(error);\n//         }\n//       },\n//       theme: {\n//         color: \"#3399cc\",\n//       },\n//     };\n\n//     const rzp = new window.Razorpay(options);\n//     rzp.open();\n//   };\n\n//   return (\n//     <div>\n\n//       {paymentData && (\n// \t\t<div className=\"App\">\n//         <div className=\"container\">\n// \t\t\t<img src={`http://localhost:4000/${paymentData.Images[0]}`} alt=\"book_img\" className=\"img\" />\n// \t\t\t<p className=\"name\">Product Name: {paymentData.ProductName}</p>\n// \t\t  <p className=\"price\">\n// \t\t\t\t\tPrice : <span>&#x20B9; {paymentData.BidAmount}</span>\n// \t\t\t\t</p>\n\n//           <button onClick={initPayment} className=\"buy_btn\">Proceed to Pay</button>\n//         </div>\n// \t\t</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Payment;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [paymentData, setPaymentData] = useState(null);\n  const location = useLocation();\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http:localhost:4000/viewproductbyid`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: location.state.id\n        })\n      });\n      const result = await response.json();\n      setPaymentData(result);\n      console.log(result);\n    } catch (error) {\n      console.error('Error fetching product data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [location.state.id]);\n  const handlePayNow = async productId => {\n    try {\n      // Navigate to the payment page\n      // You can use react-router-dom's history for navigation\n      // Import useHistory from react-router-dom\n      // const history = useHistory();\n      // history.push(`/pay?id=${productId}&amount=${product.BidAmount}`);\n\n      // Perform the payment status update\n      const response = await fetch(`http://localhost:4000/updatePaymentStatus/${productId}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentStatus: 'yes'\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n\n      // Add any additional logic or feedback based on the result if needed\n    } catch (error) {\n      console.error('Error updating payment status:', error);\n    }\n  };\n  const initPayment = () => {\n    if (!paymentData) {\n      console.error('Payment data not available');\n      return;\n    }\n    const options = {\n      key: \"rzp_test_LTI32T86DqAN8X\",\n      amount: paymentData.BidAmount * 100,\n      // Convert to paisa if necessary\n      currency: \"INR\",\n      name: paymentData.ProductName,\n      description: paymentData.Description,\n      image: `http://localhost:4000/${paymentData.Images[0]}`,\n      order_id: paymentData.order_id,\n      // Assuming _id is the unique identifier for the order\n      handler: async response => {\n        try {\n          const verifyUrl = \"http://localhost:8080/api/payment/verify\";\n          const {\n            data\n          } = await axios.post(verifyUrl, response);\n          console.log(data);\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    const rzp = new window.Razorpay(options);\n    rzp.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: paymentData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:4000/${paymentData.Images[0]}`,\n          alt: \"product_img\",\n          className: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: [\"Product Name: \", paymentData.ProductName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u20B9 \", paymentData.BidAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          // onClick={initPayment} \n          onClick: () => {\n            initPayment();\n            handlePayNow(product._id);\n          },\n          className: \"buy_btn\",\n          children: \"Proceed to Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"FCvSUQni1fG7mYlzAHfRGDKv0XU=\", false, function () {\n  return [useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Payment","_s","paymentData","setPaymentData","location","fetchData","response","fetch","method","headers","body","JSON","stringify","id","state","result","json","console","log","error","handlePayNow","productId","paymentStatus","initPayment","options","key","amount","BidAmount","currency","name","ProductName","description","Description","image","Images","order_id","handler","verifyUrl","data","post","theme","color","rzp","window","Razorpay","open","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","product","_id","_c","$RefreshReg$"],"sources":["D:/Auction/client/src/bidder/Payment.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useLocation} from 'react-router-dom';\r\n// import \"./payment.css\";\r\n\r\n// const Payment = () => {\r\n//   const [paymentData, setPaymentData] = useState(null);\r\n//   const location = useLocation()\r\n//   console.log(location.state);\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:4000/viewproductbyid`, {\r\n//         method: 'post',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ id: location.state.id }),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n//       setPaymentData(result);\r\n//       console.log(result);\r\n//     } catch (error) {\r\n//       console.error('Error fetching product data:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, [location.state.id]);\r\n\r\n//   const initPayment = () => {\r\n//     if (!paymentData) {\r\n//       console.error('Payment data not available');\r\n//       return;\r\n//     }\r\n\r\n//     const options = {\r\n//       key: \"rzp_test_LTI32T86DqAN8X\", \r\n//       amount: paymentData.BidAmount,\r\n//       currency: paymentData.currency,\r\n//       name: paymentData.name,\r\n//       description: paymentData.description,\r\n//       image: paymentData.image,\r\n//       order_id: paymentData.order_id,\r\n//       handler: async (response) => {\r\n//         try {\r\n//           const verifyUrl = \"http://localhost:8080/api/payment/verify\";\r\n//           const { data } = await axios.post(verifyUrl, response);\r\n//           console.log(data);\r\n//         } catch (error) {\r\n//           console.log(error);\r\n//         }\r\n//       },\r\n//       theme: {\r\n//         color: \"#3399cc\",\r\n//       },\r\n//     };\r\n\r\n//     const rzp = new window.Razorpay(options);\r\n//     rzp.open();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n      \r\n//       {paymentData && (\r\n// \t\t<div className=\"App\">\r\n//         <div className=\"container\">\r\n// \t\t\t<img src={`http://localhost:4000/${paymentData.Images[0]}`} alt=\"book_img\" className=\"img\" />\r\n// \t\t\t<p className=\"name\">Product Name: {paymentData.ProductName}</p>\r\n// \t\t  <p className=\"price\">\r\n// \t\t\t\t\tPrice : <span>&#x20B9; {paymentData.BidAmount}</span>\r\n// \t\t\t\t</p>\r\n          \r\n//           <button onClick={initPayment} className=\"buy_btn\">Proceed to Pay</button>\r\n//         </div>\r\n// \t\t</div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './payment.css';\r\n\r\nconst Payment = () => {\r\n  const [paymentData, setPaymentData] = useState(null);\r\n  const location = useLocation();\r\n\r\n  const fetchData = async () => {\r\n\t     try {\r\n\t       const response = await fetch(`http:localhost:4000/viewproductbyid`, {\r\n\t         method: 'post',\r\n\t         headers: {\r\n\t           'Content-Type': 'application/json',\r\n\t         },\r\n\t         body: JSON.stringify({ id: location.state.id }),\r\n\t       });\r\n\t\r\n\t       const result = await response.json();\r\n\t       setPaymentData(result);\r\n\t       console.log(result);\r\n\t     } catch (error) {\r\n\t       console.error('Error fetching product data:', error);\r\n\t     }\r\n\t   };\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t}, [location.state.id]);\r\n\r\n\tconst handlePayNow = async (productId) => {\r\n\t\ttry {\r\n\t\t  // Navigate to the payment page\r\n\t\t  // You can use react-router-dom's history for navigation\r\n\t\t  // Import useHistory from react-router-dom\r\n\t\t  // const history = useHistory();\r\n\t\t  // history.push(`/pay?id=${productId}&amount=${product.BidAmount}`);\r\n\t  \r\n\t\t  // Perform the payment status update\r\n\t\t  const response = await fetch(`http://localhost:4000/updatePaymentStatus/${productId}`, {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t  'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ paymentStatus: 'yes' }),\r\n\t\t  });\r\n\t  \r\n\t\t  const result = await response.json();\r\n\t\t  console.log(result);\r\n\t  \r\n\t\t  // Add any additional logic or feedback based on the result if needed\r\n\t\t} catch (error) {\r\n\t\t  console.error('Error updating payment status:', error);\r\n\t\t}\r\n\t  };\r\n\r\n  const initPayment = () => {\r\n    if (!paymentData) {\r\n      console.error('Payment data not available');\r\n      return;\r\n    }\r\n\t\r\n    const options = {\r\n      key: \"rzp_test_LTI32T86DqAN8X\",\r\n      amount: paymentData.BidAmount * 100, // Convert to paisa if necessary\r\n      currency: \"INR\",\r\n      name: paymentData.ProductName,\r\n      description: paymentData.Description,\r\n      image: `http://localhost:4000/${paymentData.Images[0]}`,\r\n      order_id: paymentData.order_id, // Assuming _id is the unique identifier for the order\r\n      handler: async (response) => {\r\n        try {\r\n          const verifyUrl = \"http://localhost:8080/api/payment/verify\";\r\n          const { data } = await axios.post(verifyUrl, response);\r\n          console.log(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {!paymentData && <p>Loading...</p>} */}\r\n      {paymentData && (\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <img src={`http://localhost:4000/${paymentData.Images[0]}`} alt=\"product_img\" className=\"img\" />\r\n            <p className=\"name\">Product Name: {paymentData.ProductName}</p>\r\n            <p className=\"price\">\r\n              Price: <span>&#x20B9; {paymentData.BidAmount}</span>\r\n            </p>\r\n            <button \r\n\t\t\t// onClick={initPayment} \r\n\t\t\tonClick={() => {\r\n\t\t\t\tinitPayment();\r\n\t\t\t\thandlePayNow(product._id)\r\n\t\t\t  }}\r\n\t\t\tclassName=\"buy_btn\">\r\n              Proceed to Pay\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}