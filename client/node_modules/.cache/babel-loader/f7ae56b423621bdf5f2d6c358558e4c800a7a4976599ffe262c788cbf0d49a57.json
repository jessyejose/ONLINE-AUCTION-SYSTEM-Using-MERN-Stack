{"ast":null,"code":"var _jsxFileName = \"D:\\\\Auction\\\\client\\\\src\\\\bidder\\\\Payment.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useLocation} from 'react-router-dom';\n\n// function Payment(){\n// \tconst location = useLocation();\n// \tconsole.log(location);\n// \treturn(\n\n// \t\t<h1>payment</h1>\n\n// \t)\n// }\n// export default Payment\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [paymentData, setPaymentData] = useState(null);\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    // Make an API call to get payment data\n    const fetchPaymentData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/payment/getPaymentData');\n        setPaymentData(response.data);\n      } catch (error) {\n        console.error('Error fetching payment data:', error);\n      }\n    };\n    fetchPaymentData();\n  }, []);\n  const initPayment = () => {\n    if (!paymentData) {\n      console.error('Payment data not available');\n      return;\n    }\n    const options = {\n      key: \"YOUR_RAZORPAY_KEY\",\n      // Replace with your actual Razorpay API key\n      amount: paymentData.amount,\n      currency: paymentData.currency,\n      name: paymentData.name,\n      description: paymentData.description,\n      image: paymentData.image,\n      order_id: paymentData.order_id,\n      handler: async response => {\n        try {\n          const verifyUrl = \"http://localhost:8080/api/payment/verify\";\n          const {\n            data\n          } = await axios.post(verifyUrl, response);\n          console.log(data);\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    const rzp = new window.Razorpay(options);\n    rzp.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), paymentData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount: \", paymentData.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initPayment,\n        children: \"Proceed to Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"FCvSUQni1fG7mYlzAHfRGDKv0XU=\", false, function () {\n  return [useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Payment","_s","paymentData","setPaymentData","location","console","log","fetchPaymentData","response","get","data","error","initPayment","options","key","amount","currency","name","description","image","order_id","handler","verifyUrl","post","theme","color","rzp","window","Razorpay","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Auction/client/src/bidder/Payment.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useLocation} from 'react-router-dom';\r\n\r\n// function Payment(){\r\n// \tconst location = useLocation();\r\n// \tconsole.log(location);\r\n// \treturn(\r\n\r\n// \t\t<h1>payment</h1>\r\n\r\n// \t)\r\n// }\r\n// export default Payment\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation} from 'react-router-dom';\r\n\r\nconst Payment = () => {\r\n  const [paymentData, setPaymentData] = useState(null);\r\n  const location = useLocation()\r\n  console.log(location);\r\n  useEffect(() => {\r\n    // Make an API call to get payment data\r\n    const fetchPaymentData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/payment/getPaymentData');\r\n        setPaymentData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching payment data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPaymentData();\r\n  }, []);\r\n\r\n  const initPayment = () => {\r\n    if (!paymentData) {\r\n      console.error('Payment data not available');\r\n      return;\r\n    }\r\n\r\n    const options = {\r\n      key: \"YOUR_RAZORPAY_KEY\", // Replace with your actual Razorpay API key\r\n      amount: paymentData.amount,\r\n      currency: paymentData.currency,\r\n      name: paymentData.name,\r\n      description: paymentData.description,\r\n      image: paymentData.image,\r\n      order_id: paymentData.order_id,\r\n      handler: async (response) => {\r\n        try {\r\n          const verifyUrl = \"http://localhost:8080/api/payment/verify\";\r\n          const { data } = await axios.post(verifyUrl, response);\r\n          console.log(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Payment Page</h1>\r\n      {paymentData && (\r\n        <div>\r\n          <p>Amount: {paymentData.amount}</p>\r\n          {/* <p>Description: {paymentData.description}</p> */}\r\n          <button onClick={initPayment}>Proceed to Pay</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}