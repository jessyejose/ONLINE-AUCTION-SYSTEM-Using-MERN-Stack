{"ast":null,"code":"var _jsxFileName = \"D:\\\\Auction\\\\client\\\\src\\\\Chat.jsx\",\n  _s = $RefreshSig$();\n// // Chat.js\n// import React, { useState, useEffect } from 'react';\n\n// const Chat = ({ chatId, userId }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n\n//   useEffect(() => {\n//     // Fetch chat messages based on chatId\n//     const fetchChat = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:4000/getChat/${chatId}`);\n//         const data = await response.json();\n//         setMessages(data.messages || []);\n//       } catch (error) {\n//         console.error('Error fetching chat:', error);\n//       }\n//     };\n\n//     fetchChat();\n//   }, [chatId]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await fetch(`http://localhost:4000/sendMessage/${chatId}`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           senderId: userId,\n//           message: newMessage,\n//         }),\n//       });\n\n//       // Refresh messages\n//       const response = await fetch(`http://localhost:4000/getChat/${chatId}`);\n//       const data = await response.json();\n//       setMessages(data.messages || []);\n\n//       // Clear the input field\n//       setNewMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <div style={{ height: '300px', overflowY: 'scroll' }}>\n//         {messages.map((msg, index) => (\n//           <div key={index}>\n//             <strong>{msg.senderId === userId ? 'You' : 'Other User'}:</strong> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//       <div>\n//         <textarea\n//           value={newMessage}\n//           onChange={(e) => setNewMessage(e.target.value)}\n//           placeholder=\"Type your message...\"\n//         />\n//         <button onClick={sendMessage}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n// Chat.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  seller,\n  bidder\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const sendMessage = () => {\n    // Implement logic to send messages to the server\n  };\n  useEffect(() => {\n    // Implement logic to fetch chat messages from the server\n  }, [seller, bidder]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '200px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        marginBottom: '10px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chat","seller","bidder","_s","messages","setMessages","newMessage","setNewMessage","sendMessage","children","style","height","overflowY","border","marginBottom","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Auction/client/src/Chat.jsx"],"sourcesContent":["// // Chat.js\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const Chat = ({ chatId, userId }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     // Fetch chat messages based on chatId\r\n//     const fetchChat = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:4000/getChat/${chatId}`);\r\n//         const data = await response.json();\r\n//         setMessages(data.messages || []);\r\n//       } catch (error) {\r\n//         console.error('Error fetching chat:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchChat();\r\n//   }, [chatId]);\r\n\r\n//   const sendMessage = async () => {\r\n//     try {\r\n//       await fetch(`http://localhost:4000/sendMessage/${chatId}`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           senderId: userId,\r\n//           message: newMessage,\r\n//         }),\r\n//       });\r\n\r\n//       // Refresh messages\r\n//       const response = await fetch(`http://localhost:4000/getChat/${chatId}`);\r\n//       const data = await response.json();\r\n//       setMessages(data.messages || []);\r\n\r\n//       // Clear the input field\r\n//       setNewMessage('');\r\n//     } catch (error) {\r\n//       console.error('Error sending message:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={{ height: '300px', overflowY: 'scroll' }}>\r\n//         {messages.map((msg, index) => (\r\n//           <div key={index}>\r\n//             <strong>{msg.senderId === userId ? 'You' : 'Other User'}:</strong> {msg.message}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <div>\r\n//         <textarea\r\n//           value={newMessage}\r\n//           onChange={(e) => setNewMessage(e.target.value)}\r\n//           placeholder=\"Type your message...\"\r\n//         />\r\n//         <button onClick={sendMessage}>Send</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n// Chat.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Chat = ({ seller, bidder }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const sendMessage = () => {\r\n    // Implement logic to send messages to the server\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Implement logic to fetch chat messages from the server\r\n  }, [seller, bidder]);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: '200px', overflowY: 'auto', border: '1px solid #ccc', marginBottom: '10px' }}>\r\n        {messages.map((message, index) => (\r\n          <div key={index}>{message}</div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;EAAA,CACD;EAEDX,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACI,MAAM,EAAEC,MAAM,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAKW,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,EAChGL,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BlB,OAAA;QAAAU,QAAA,EAAkBO;MAAO,GAAfC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,UAAW;QAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFtB,OAAA;QAAQ6B,OAAO,EAAEpB,WAAY;QAAAC,QAAA,EAAC;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9BIH,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}